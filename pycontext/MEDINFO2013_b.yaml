Comments: ''
Direction: forward
Lex: "no evidence to suggest"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no interval change"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no mammographic evidence of"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no new evidence"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no other evidence"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no radiographic evidence of"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: not appear
Regex: ''
Type: probableNegatedExistence
---
Comments: ''
Direction: forward
Lex: without any evidence of
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: without evidence
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: none
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: are ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: being ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: can be ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: can rule him out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: can rule him out against
Regex: can\srule\s(her|him)\sout\sagainst
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: can rule out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: cannot
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: cleared of
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: declined
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: declines
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: denied
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: denies
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: deny
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: bidirectional
Lex: excluded
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: bidirectional
Lex: free
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: free of
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: has been ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: have been ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: is absent
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: is negative
Regex: (is|was) negative
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: is ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: negative examination for
Regex: negative (examination|study|exam|evaluation) for
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: negative for
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: neither
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: never developed
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: never had
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: 'no' 
Regex: \bno\b
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no evidence"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no new"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no other"
Regex: no[\s]*other
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no support for"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "no suspicion of"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: not
Regex: \bnot\b
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: not exhibit
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: not had
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: not have
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: not seen
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: nothing
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: patient was not
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: reject
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rejected
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: resolved
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled her out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled her out against
Regex: ruled\s(him|her)\sout\sagainst
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled her out for
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled him out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled him out against
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled him out for
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled out against
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled out for
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled the patient out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled the patient out against
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: ruled the patient out for
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules her out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules her out for
Regex: rules\s(him|her)\sout\sfor
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules him out
Regex: rules\s(him|her)\sout
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules him out for
Regex: rules\s(him|her)\sout\sfor
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules out for
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules the patient out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: rules the patient out for
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: backward
Lex: was ruled out
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: "with no"
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: without
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: doesnt
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: doesn't
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: never
Regex: ''
Type: DEFINITE_NEGATED_EXISTENCE
---
Comments: ''
Direction: forward
Lex: aunt
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: aunt's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: brother
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: brother's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: dad
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: dad's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: family history
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: father's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: grandfather
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: grandfather's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: grandmother
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: grandmother's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: husband
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: husband's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: mom
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: mom's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: mother's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: roommate
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: roommate's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: sister
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: sister's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: uncle
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: uncle's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: wife
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: wife's
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: cousin
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: friend
Regex: ''
Type: experiencer
---
Comments: ''
Direction: forward
Lex: gram negative
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: "no change"
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: "no definite change"
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: "no increase"
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: "no significant change"
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: "no significant interval change"
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: "no suspicious change"
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: not cause
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: not drain
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: not extend
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: not necessarily
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: not only
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: positive study for
Regex: positive (study|exam|examination)( for)
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: without difficulty
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: did not rule out
Regex: ''
Type: pseudoNegation
---
Comments: ''
Direction: forward
Lex: life not worth living
Regex: \blife.*? not .*?worth .*?living
Type: pseudoNegation
---
Comments: ''
Direction: terminate
Lex: although
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: apart from
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a cause for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a cause of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a reason for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a reason of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary cause for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary cause of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary etiology for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary etiology of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary origin for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary origin of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary reason for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary reason of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary source for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a secondary source of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a source for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as a source of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an cause for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an cause of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an etiology for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an etiology for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an etiology of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an etiology of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an origin for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an origin of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an reason for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an reason of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary cause for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary cause of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary etiology for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary etiology of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary origin for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary origin of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary reason for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary reason of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary source for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an secondary source of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an source for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as an source of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the cause for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the cause of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the etiology for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the etiology of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the origin for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the origin of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the reason for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the reason of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary cause for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary cause of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary etiology for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary etiology of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary origin for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary origin of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary reason for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary reason of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary source for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the secondary source of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the source for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: as the source of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: aside from
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: because
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: but
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: cause for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: cause of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: causes for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: causes of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: comes in with
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: coming in with
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: complaining
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: complains
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: currently
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: ED
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: emergency department
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: etiology for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: etiology of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: except
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: for this reason
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: however
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: involving
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: nevertheless
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: noted
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: origin for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: origin of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: origins for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: origins of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: other possibilities of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: since
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: source for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: source of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: sources for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: sources of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: sudden onset of
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: though
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: trigger event for
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: was found
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: which
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: with
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: yet
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: and
Regex: ''
Type: ''
---
Comments: ''
Direction: terminate
Lex: after
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: although
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: as
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: because
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: before
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: even if
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: even though
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: if
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: in order that
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: once
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: provided that
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: rather than
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: since
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: so that
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: than
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: that
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: though
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: unless
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: until
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: when
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: whenever
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: where
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: whereas
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: wherever
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: whether
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: while
Regex: ''
Type: CONJ
---
Comments: ''
Direction: terminate
Lex: why
Regex: ''
Type: CONJ
